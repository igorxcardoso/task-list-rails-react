{"ast":null,"code":"var _jsxFileName = \"/home/igor/Projects/My_Projects/project-react/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport TaskDetails from \"./components/TaskDetails\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // let message = \"Ola!\"S\n  const [tasks, setTask] = useState([{\n    id: 1,\n    title: 'Estudar',\n    completed: false\n  }, {\n    id: 2,\n    title: 'Corre',\n    completed: true\n  }]); // O código será executado sempre que as varíaveis que foram passas mudar\n\n  useEffect(() => {\n    console.log(\"Task mudou\");\n  }, [tasks]);\n\n  const handleTaskClick = taskId => {\n    const newTasks = tasks.map(t => {\n      if (t.id === taskId) {\n        return { ...t,\n          completed: !t.completed\n        };\n      }\n\n      return t;\n    });\n    setTask(newTasks);\n  };\n\n  const handleTaskAddition = taskTitle => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: uuidv4(),\n      completed: false\n    }];\n    setTask(newTasks);\n  };\n\n  const handleTaskDelettion = taskId => {\n    const newTasks = tasks.filter(task => task.id !== taskId); // Vai pecorrer a lista e vai tirar a task que o id foi passado\n\n    setTask(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AddTask, {\n              handleTaskAddition: handleTaskAddition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n              myTasks: tasks,\n              handleTaskClick: handleTaskClick,\n              handleTaskDelettion: handleTaskDelettion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:taskTitle\",\n        exact: true,\n        component: TaskDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2MnKlxO5PerZCVjzs9nl8yFOU0U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/igor/Projects/My_Projects/project-react/src/App.jsx"],"names":["React","useState","useEffect","v4","uuidv4","BrowserRouter","Route","axios","Tasks","AddTask","Header","TaskDetails","App","tasks","setTask","id","title","completed","console","log","handleTaskClick","taskId","newTasks","map","t","handleTaskAddition","taskTitle","handleTaskDelettion","filter","task"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {v4 as uuidv4} from \"uuid\"\nimport { BrowserRouter, Route} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport TaskDetails from \"./components/TaskDetails\";\n\nimport \"./App.css\"\n\nconst App = () => {\n  // let message = \"Ola!\"S\n  const [tasks, setTask] = useState([\n    {\n      id: 1,\n      title: 'Estudar',\n      completed: false\n    },\n    {\n      id: 2,\n      title: 'Corre',\n      completed: true\n    }\n  ]);\n\n  // O código será executado sempre que as varíaveis que foram passas mudar\n  useEffect(() => {\n    console.log(\"Task mudou\");\n  }, [tasks]);\n\n  const handleTaskClick = (taskId) => {\n    const newTasks = tasks.map( t => {\n      if(t.id === taskId) {\n        return {\n          ...t,\n          completed: !t.completed\n        }\n      }\n      return t;\n    });\n    setTask(newTasks);\n  };\n\n  const handleTaskAddition = (taskTitle) => {\n    const newTasks = [\n      ...tasks,\n      {\n        title: taskTitle,\n        id: uuidv4(),\n        completed: false\n      }\n    ];\n    setTask(newTasks);\n  };\n\n  const handleTaskDelettion = (taskId) => {\n    const newTasks = tasks.filter(task => task.id !== taskId)\n    // Vai pecorrer a lista e vai tirar a task que o id foi passado\n    setTask(newTasks);\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Header />\n\n          <Route exact path = \"/\" render={() => {\n            return (\n              <>\n                < AddTask handleTaskAddition={handleTaskAddition} />\n                < Tasks \n                myTasks={tasks} \n                handleTaskClick={handleTaskClick} \n                handleTaskDelettion={handleTaskDelettion}\n                />\n              </>\n            )\n          }}/>\n\n          <Route path=\"/:taskTitle\" exact component={TaskDetails}/>\n  \n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}